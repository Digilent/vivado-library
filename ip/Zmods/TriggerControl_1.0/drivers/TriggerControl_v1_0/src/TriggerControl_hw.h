#ifndef TRIGGER_CONTROL_HW_H_
#define TRIGGER_CONTROL_HW_H_

#include "xil_types.h"
#include "xil_io.h"

/* Register offsets */
#define TRIGGER_CONTROL_AP_CTRL_REG_OFFSET 0x0
#define TRIGGER_CONTROL_GIE_REG_OFFSET 0x4
#define TRIGGER_CONTROL_IP_INTR_EN_REG_OFFSET 0x8
#define TRIGGER_CONTROL_IP_INTR_STS_REG_OFFSET 0xc
#define TRIGGER_CONTROL_CONTROL_REG_OFFSET 0x10
#define TRIGGER_CONTROL_STATUS_REG_OFFSET 0x18
#define TRIGGER_CONTROL_TRIGGERENABLE_REG_OFFSET 0x20
#define TRIGGER_CONTROL_TRIGGERDETECTED_REG_OFFSET 0x28
#define TRIGGER_CONTROL_TRIGGERTOLASTBEATS_REG_OFFSET 0x30
#define TRIGGER_CONTROL_PREBUFFERBEATS_REG_OFFSET 0x38

/* Control Register bitfields */
#define TRIGGER_CONTROL_AP_CTRL_START_MASK 0x01
#define TRIGGER_CONTROL_AP_CTRL_DONE_MASK 0x02
#define TRIGGER_CONTROL_AP_CTRL_IDLE_MASK 0x04
#define TRIGGER_CONTROL_AP_CTRL_READY_MASK 0x08
#define TRIGGER_CONTROL_AP_CTRL_AUTO_RESTART_MASK 0x80

/* Global interrupt enable register bitfields */
#define TRIGGER_CONTROL_GIE_ENABLE_MASK 0x01

/* IP interrupt enable register bitfields */
#define TRIGGER_CONTROL_IP_INTR_EN_AP_DONE_MASK 0x1
#define TRIGGER_CONTROL_IP_INTR_EN_AP_READY_MASK 0x2
#define TRIGGER_CONTROL_IP_INTR_EN_ALL_MASK 0x3

/* IP interrupt status register bitfields */
#define TRIGGER_CONTROL_IP_INTR_STS_AP_DONE_MASK 0x1
#define TRIGGER_CONTROL_IP_INTR_STS_AP_READY_MASK 0x2
/* CONTROL register bitfields */
#define TRIGGER_CONTROL_CONTROL_START_MASK 0x1
/* STATUS register bitfields */
#define TRIGGER_CONTROL_STATUS_IDLE_MASK 0x1
/* TRIGGERENABLE register bitfields */
#define TRIGGER_CONTROL_TRIGGERENABLE_TRIGGERENABLE_MASK 0xffffffff
/* TRIGGERDETECTED register bitfields */
#define TRIGGER_CONTROL_TRIGGERDETECTED_TRIGGERDETECTED_MASK 0xffffffff
/* TRIGGERTOLASTBEATS register bitfields */
#define TRIGGER_CONTROL_TRIGGERTOLASTBEATS_TRIGGERTOLASTBEATS_MASK 0xffffffff
/* PREBUFFERBEATS register bitfields */
#define TRIGGER_CONTROL_PREBUFFERBEATS_PREBUFFERBEATS_MASK 0xffffffff

#endif /* end of protection macro */
