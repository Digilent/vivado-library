// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ZmodScopeConfig_ZmodScopeConfig,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.000000,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=399,HLS_SYN_LUT=362,HLS_VERSION=2021_1}" *)

module ZmodScopeConfig (
        ap_clk,
        ap_rst_n,
        RstBusy,
        InitDoneADC,
        ConfigError,
        InitDoneRelay,
        DataOverflow,
        Ch1HgMultCoef,
        Ch1LgMultCoef,
        Ch1LgAddCoef,
        Ch1HgAddCoef,
        Ch2HgMultCoef,
        Ch2LgMultCoef,
        Ch2LgAddCoef,
        Ch2HgAddCoef,
        Ch1Gain,
        Ch2Gain,
        Ch1Coupling,
        Ch2Coupling,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [0:0] RstBusy;
input  [0:0] InitDoneADC;
input  [0:0] ConfigError;
input  [0:0] InitDoneRelay;
input  [0:0] DataOverflow;
output  [17:0] Ch1HgMultCoef;
output  [17:0] Ch1LgMultCoef;
output  [17:0] Ch1LgAddCoef;
output  [17:0] Ch1HgAddCoef;
output  [17:0] Ch2HgMultCoef;
output  [17:0] Ch2LgMultCoef;
output  [17:0] Ch2LgAddCoef;
output  [17:0] Ch2HgAddCoef;
output  [0:0] Ch1Gain;
output  [0:0] Ch2Gain;
output  [0:0] Ch1Coupling;
output  [0:0] Ch2Coupling;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [17:0] Ch1HgMultCoefAxil;
wire   [17:0] Ch1LgMultCoefAxil;
wire   [17:0] Ch1HgAddCoefAxil;
wire   [17:0] Ch1LgAddCoefAxil;
wire   [17:0] Ch2HgMultCoefAxil;
wire   [17:0] Ch2LgMultCoefAxil;
wire   [17:0] Ch2HgAddCoefAxil;
wire   [17:0] Ch2LgAddCoefAxil;
wire   [3:0] RelayConfigAxil;
wire   [4:0] StatusAxil;
reg   [17:0] Ch1HgMultCoef_1_data_reg;
reg    Ch1HgMultCoef_1_vld_reg;
reg    Ch1HgMultCoef_1_vld_in;
reg    Ch1HgMultCoef_1_ack_in;
reg   [17:0] Ch1LgMultCoef_1_data_reg;
reg    Ch1LgMultCoef_1_vld_reg;
reg    Ch1LgMultCoef_1_vld_in;
reg    Ch1LgMultCoef_1_ack_in;
reg   [17:0] Ch1LgAddCoef_1_data_reg;
reg    Ch1LgAddCoef_1_vld_reg;
reg    Ch1LgAddCoef_1_vld_in;
reg    Ch1LgAddCoef_1_ack_in;
reg   [17:0] Ch1HgAddCoef_1_data_reg;
reg    Ch1HgAddCoef_1_vld_reg;
reg    Ch1HgAddCoef_1_vld_in;
reg    Ch1HgAddCoef_1_ack_in;
reg   [17:0] Ch2HgMultCoef_1_data_reg;
reg    Ch2HgMultCoef_1_vld_reg;
reg    Ch2HgMultCoef_1_vld_in;
reg    Ch2HgMultCoef_1_ack_in;
reg   [17:0] Ch2LgMultCoef_1_data_reg;
reg    Ch2LgMultCoef_1_vld_reg;
reg    Ch2LgMultCoef_1_vld_in;
reg    Ch2LgMultCoef_1_ack_in;
reg   [17:0] Ch2LgAddCoef_1_data_reg;
reg    Ch2LgAddCoef_1_vld_reg;
reg    Ch2LgAddCoef_1_vld_in;
reg    Ch2LgAddCoef_1_ack_in;
reg   [17:0] Ch2HgAddCoef_1_data_reg;
reg    Ch2HgAddCoef_1_vld_reg;
reg    Ch2HgAddCoef_1_vld_in;
reg    Ch2HgAddCoef_1_ack_in;
reg   [0:0] Ch1Gain_1_data_reg;
reg    Ch1Gain_1_vld_reg;
reg    Ch1Gain_1_vld_in;
reg    Ch1Gain_1_ack_in;
reg   [0:0] Ch2Gain_1_data_reg;
reg    Ch2Gain_1_vld_reg;
reg    Ch2Gain_1_vld_in;
reg    Ch2Gain_1_ack_in;
reg   [0:0] Ch1Coupling_1_data_reg;
reg    Ch1Coupling_1_vld_reg;
reg    Ch1Coupling_1_vld_in;
reg    Ch1Coupling_1_ack_in;
reg   [0:0] Ch2Coupling_1_data_reg;
reg    Ch2Coupling_1_vld_reg;
reg    Ch2Coupling_1_vld_in;
reg    Ch2Coupling_1_ack_in;
wire   [0:0] trunc_ln674_fu_299_p1;
wire    ap_CS_fsm_state2;
reg    ap_block_state2;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 Ch1HgMultCoef_1_data_reg = 18'd0;
#0 Ch1HgMultCoef_1_vld_reg = 1'b0;
#0 Ch1LgMultCoef_1_data_reg = 18'd0;
#0 Ch1LgMultCoef_1_vld_reg = 1'b0;
#0 Ch1LgAddCoef_1_data_reg = 18'd0;
#0 Ch1LgAddCoef_1_vld_reg = 1'b0;
#0 Ch1HgAddCoef_1_data_reg = 18'd0;
#0 Ch1HgAddCoef_1_vld_reg = 1'b0;
#0 Ch2HgMultCoef_1_data_reg = 18'd0;
#0 Ch2HgMultCoef_1_vld_reg = 1'b0;
#0 Ch2LgMultCoef_1_data_reg = 18'd0;
#0 Ch2LgMultCoef_1_vld_reg = 1'b0;
#0 Ch2LgAddCoef_1_data_reg = 18'd0;
#0 Ch2LgAddCoef_1_vld_reg = 1'b0;
#0 Ch2HgAddCoef_1_data_reg = 18'd0;
#0 Ch2HgAddCoef_1_vld_reg = 1'b0;
#0 Ch1Gain_1_data_reg = 1'd0;
#0 Ch1Gain_1_vld_reg = 1'b0;
#0 Ch2Gain_1_data_reg = 1'd0;
#0 Ch2Gain_1_vld_reg = 1'b0;
#0 Ch1Coupling_1_data_reg = 1'd0;
#0 Ch1Coupling_1_vld_reg = 1'b0;
#0 Ch2Coupling_1_data_reg = 1'd0;
#0 Ch2Coupling_1_vld_reg = 1'b0;
end

ZmodScopeConfig_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .Ch1HgMultCoefAxil(Ch1HgMultCoefAxil),
    .Ch1LgMultCoefAxil(Ch1LgMultCoefAxil),
    .Ch1HgAddCoefAxil(Ch1HgAddCoefAxil),
    .Ch1LgAddCoefAxil(Ch1LgAddCoefAxil),
    .Ch2HgMultCoefAxil(Ch2HgMultCoefAxil),
    .Ch2LgMultCoefAxil(Ch2LgMultCoefAxil),
    .Ch2HgAddCoefAxil(Ch2HgAddCoefAxil),
    .Ch2LgAddCoefAxil(Ch2LgAddCoefAxil),
    .RelayConfigAxil(RelayConfigAxil),
    .StatusAxil(StatusAxil),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == Ch1Coupling_1_vld_in) & (1'b1 == Ch1Coupling_1_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Ch1Coupling_1_vld_reg) & (1'b1 == Ch1Coupling_1_vld_in)))) begin
        Ch1Coupling_1_data_reg <= RelayConfigAxil[32'd2];
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == Ch1Gain_1_vld_in) & (1'b1 == Ch1Gain_1_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Ch1Gain_1_vld_reg) & (1'b1 == Ch1Gain_1_vld_in)))) begin
        Ch1Gain_1_data_reg <= trunc_ln674_fu_299_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == Ch1HgAddCoef_1_vld_in) & (1'b1 == Ch1HgAddCoef_1_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Ch1HgAddCoef_1_vld_reg) & (1'b1 == Ch1HgAddCoef_1_vld_in)))) begin
        Ch1HgAddCoef_1_data_reg <= Ch1HgAddCoefAxil;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == Ch1HgMultCoef_1_vld_in) & (1'b1 == Ch1HgMultCoef_1_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Ch1HgMultCoef_1_vld_reg) & (1'b1 == Ch1HgMultCoef_1_vld_in)))) begin
        Ch1HgMultCoef_1_data_reg <= Ch1HgMultCoefAxil;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Ch1LgAddCoef_1_vld_reg) & (1'b1 == Ch1LgAddCoef_1_vld_in)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == Ch1LgAddCoef_1_vld_in) & (1'b1 == Ch1LgAddCoef_1_vld_reg) & (1'b1 == 1'b1)))) begin
        Ch1LgAddCoef_1_data_reg <= Ch1LgAddCoefAxil;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == Ch1LgMultCoef_1_vld_in) & (1'b1 == Ch1LgMultCoef_1_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Ch1LgMultCoef_1_vld_reg) & (1'b1 == Ch1LgMultCoef_1_vld_in)))) begin
        Ch1LgMultCoef_1_data_reg <= Ch1LgMultCoefAxil;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == Ch2Coupling_1_vld_in) & (1'b1 == Ch2Coupling_1_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Ch2Coupling_1_vld_reg) & (1'b1 == Ch2Coupling_1_vld_in)))) begin
        Ch2Coupling_1_data_reg <= RelayConfigAxil[32'd3];
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == Ch2Gain_1_vld_in) & (1'b1 == Ch2Gain_1_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Ch2Gain_1_vld_reg) & (1'b1 == Ch2Gain_1_vld_in)))) begin
        Ch2Gain_1_data_reg <= RelayConfigAxil[32'd1];
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == Ch2HgAddCoef_1_vld_in) & (1'b1 == Ch2HgAddCoef_1_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Ch2HgAddCoef_1_vld_reg) & (1'b1 == Ch2HgAddCoef_1_vld_in)))) begin
        Ch2HgAddCoef_1_data_reg <= Ch2HgAddCoefAxil;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == Ch2HgMultCoef_1_vld_in) & (1'b1 == Ch2HgMultCoef_1_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Ch2HgMultCoef_1_vld_reg) & (1'b1 == Ch2HgMultCoef_1_vld_in)))) begin
        Ch2HgMultCoef_1_data_reg <= Ch2HgMultCoefAxil;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == Ch2LgAddCoef_1_vld_in) & (1'b1 == Ch2LgAddCoef_1_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Ch2LgAddCoef_1_vld_reg) & (1'b1 == Ch2LgAddCoef_1_vld_in)))) begin
        Ch2LgAddCoef_1_data_reg <= Ch2LgAddCoefAxil;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == Ch2LgMultCoef_1_vld_in) & (1'b1 == Ch2LgMultCoef_1_vld_reg)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == Ch2LgMultCoef_1_vld_reg) & (1'b1 == Ch2LgMultCoef_1_vld_in)))) begin
        Ch2LgMultCoef_1_data_reg <= Ch2LgMultCoefAxil;
    end
end

always @ (*) begin
    if (((1'b0 == Ch1Coupling_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == Ch1Coupling_1_vld_reg)))) begin
        Ch1Coupling_1_ack_in = 1'b1;
    end else begin
        Ch1Coupling_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Ch1Coupling_1_vld_in = 1'b1;
    end else begin
        Ch1Coupling_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Ch1Gain_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == Ch1Gain_1_vld_reg)))) begin
        Ch1Gain_1_ack_in = 1'b1;
    end else begin
        Ch1Gain_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Ch1Gain_1_vld_in = 1'b1;
    end else begin
        Ch1Gain_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Ch1HgAddCoef_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == Ch1HgAddCoef_1_vld_reg)))) begin
        Ch1HgAddCoef_1_ack_in = 1'b1;
    end else begin
        Ch1HgAddCoef_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Ch1HgAddCoef_1_vld_in = 1'b1;
    end else begin
        Ch1HgAddCoef_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Ch1HgMultCoef_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == Ch1HgMultCoef_1_vld_reg)))) begin
        Ch1HgMultCoef_1_ack_in = 1'b1;
    end else begin
        Ch1HgMultCoef_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Ch1HgMultCoef_1_vld_in = 1'b1;
    end else begin
        Ch1HgMultCoef_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Ch1LgAddCoef_1_vld_reg) | ((1'b1 == Ch1LgAddCoef_1_vld_reg) & (1'b1 == 1'b1)))) begin
        Ch1LgAddCoef_1_ack_in = 1'b1;
    end else begin
        Ch1LgAddCoef_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Ch1LgAddCoef_1_vld_in = 1'b1;
    end else begin
        Ch1LgAddCoef_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Ch1LgMultCoef_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == Ch1LgMultCoef_1_vld_reg)))) begin
        Ch1LgMultCoef_1_ack_in = 1'b1;
    end else begin
        Ch1LgMultCoef_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Ch1LgMultCoef_1_vld_in = 1'b1;
    end else begin
        Ch1LgMultCoef_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Ch2Coupling_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == Ch2Coupling_1_vld_reg)))) begin
        Ch2Coupling_1_ack_in = 1'b1;
    end else begin
        Ch2Coupling_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Ch2Coupling_1_vld_in = 1'b1;
    end else begin
        Ch2Coupling_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Ch2Gain_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == Ch2Gain_1_vld_reg)))) begin
        Ch2Gain_1_ack_in = 1'b1;
    end else begin
        Ch2Gain_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Ch2Gain_1_vld_in = 1'b1;
    end else begin
        Ch2Gain_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Ch2HgAddCoef_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == Ch2HgAddCoef_1_vld_reg)))) begin
        Ch2HgAddCoef_1_ack_in = 1'b1;
    end else begin
        Ch2HgAddCoef_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Ch2HgAddCoef_1_vld_in = 1'b1;
    end else begin
        Ch2HgAddCoef_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Ch2HgMultCoef_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == Ch2HgMultCoef_1_vld_reg)))) begin
        Ch2HgMultCoef_1_ack_in = 1'b1;
    end else begin
        Ch2HgMultCoef_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Ch2HgMultCoef_1_vld_in = 1'b1;
    end else begin
        Ch2HgMultCoef_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Ch2LgAddCoef_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == Ch2LgAddCoef_1_vld_reg)))) begin
        Ch2LgAddCoef_1_ack_in = 1'b1;
    end else begin
        Ch2LgAddCoef_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Ch2LgAddCoef_1_vld_in = 1'b1;
    end else begin
        Ch2LgAddCoef_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Ch2LgMultCoef_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == Ch2LgMultCoef_1_vld_reg)))) begin
        Ch2LgMultCoef_1_ack_in = 1'b1;
    end else begin
        Ch2LgMultCoef_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Ch2LgMultCoef_1_vld_in = 1'b1;
    end else begin
        Ch2LgMultCoef_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == Ch1LgMultCoef_1_ack_in) | (1'b0 == Ch1HgMultCoef_1_ack_in) | (1'b0 == Ch2Coupling_1_ack_in) | (1'b0 == Ch1Coupling_1_ack_in) | (1'b0 == Ch2Gain_1_ack_in) | (1'b0 == Ch1Gain_1_ack_in) | (1'b0 == Ch2HgAddCoef_1_ack_in) | (1'b0 == Ch2LgAddCoef_1_ack_in) | (1'b0 == Ch2LgMultCoef_1_ack_in) | (1'b0 == Ch2HgMultCoef_1_ack_in) | (1'b0 == Ch1HgAddCoef_1_ack_in) | (1'b0 == Ch1LgAddCoef_1_ack_in))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == Ch1LgMultCoef_1_ack_in) | (1'b0 == Ch1HgMultCoef_1_ack_in) | (1'b0 == Ch2Coupling_1_ack_in) | (1'b0 == Ch1Coupling_1_ack_in) | (1'b0 == Ch2Gain_1_ack_in) | (1'b0 == Ch1Gain_1_ack_in) | (1'b0 == Ch2HgAddCoef_1_ack_in) | (1'b0 == Ch2LgAddCoef_1_ack_in) | (1'b0 == Ch2LgMultCoef_1_ack_in) | (1'b0 == Ch2HgMultCoef_1_ack_in) | (1'b0 == Ch1HgAddCoef_1_ack_in) | (1'b0 == Ch1LgAddCoef_1_ack_in)) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == Ch1LgMultCoef_1_ack_in) | (1'b0 == Ch1HgMultCoef_1_ack_in) | (1'b0 == Ch2Coupling_1_ack_in) | (1'b0 == Ch1Coupling_1_ack_in) | (1'b0 == Ch2Gain_1_ack_in) | (1'b0 == Ch1Gain_1_ack_in) | (1'b0 == Ch2HgAddCoef_1_ack_in) | (1'b0 == Ch2LgAddCoef_1_ack_in) | (1'b0 == Ch2LgMultCoef_1_ack_in) | (1'b0 == Ch2HgMultCoef_1_ack_in) | (1'b0 == Ch1HgAddCoef_1_ack_in) | (1'b0 == Ch1LgAddCoef_1_ack_in)) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((1'b0 == Ch1LgMultCoef_1_ack_in) | (1'b0 == Ch1HgMultCoef_1_ack_in) | (1'b0 == Ch2Coupling_1_ack_in) | (1'b0 == Ch1Coupling_1_ack_in) | (1'b0 == Ch2Gain_1_ack_in) | (1'b0 == Ch1Gain_1_ack_in) | (1'b0 == Ch2HgAddCoef_1_ack_in) | (1'b0 == Ch2LgAddCoef_1_ack_in) | (1'b0 == Ch2LgMultCoef_1_ack_in) | (1'b0 == Ch2HgMultCoef_1_ack_in) | (1'b0 == Ch1HgAddCoef_1_ack_in) | (1'b0 == Ch1LgAddCoef_1_ack_in)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ch1Coupling = Ch1Coupling_1_data_reg;

assign Ch1Gain = Ch1Gain_1_data_reg;

assign Ch1HgAddCoef = Ch1HgAddCoef_1_data_reg;

assign Ch1HgMultCoef = Ch1HgMultCoef_1_data_reg;

assign Ch1LgAddCoef = Ch1LgAddCoef_1_data_reg;

assign Ch1LgMultCoef = Ch1LgMultCoef_1_data_reg;

assign Ch2Coupling = Ch2Coupling_1_data_reg;

assign Ch2Gain = Ch2Gain_1_data_reg;

assign Ch2HgAddCoef = Ch2HgAddCoef_1_data_reg;

assign Ch2HgMultCoef = Ch2HgMultCoef_1_data_reg;

assign Ch2LgAddCoef = Ch2LgAddCoef_1_data_reg;

assign Ch2LgMultCoef = Ch2LgMultCoef_1_data_reg;

assign StatusAxil = {{{{{DataOverflow}, {InitDoneRelay}}, {ConfigError}}, {InitDoneADC}}, {RstBusy}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state2 = ((1'b0 == Ch1LgMultCoef_1_ack_in) | (1'b0 == Ch1HgMultCoef_1_ack_in) | (1'b0 == Ch2Coupling_1_ack_in) | (1'b0 == Ch1Coupling_1_ack_in) | (1'b0 == Ch2Gain_1_ack_in) | (1'b0 == Ch1Gain_1_ack_in) | (1'b0 == Ch2HgAddCoef_1_ack_in) | (1'b0 == Ch2LgAddCoef_1_ack_in) | (1'b0 == Ch2LgMultCoef_1_ack_in) | (1'b0 == Ch2HgMultCoef_1_ack_in) | (1'b0 == Ch1HgAddCoef_1_ack_in) | (1'b0 == Ch1LgAddCoef_1_ack_in));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign trunc_ln674_fu_299_p1 = RelayConfigAxil[0:0];

endmodule //ZmodScopeConfig
